buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

def ourCurrentVersionName = '1.0'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 19
        versionName ourCurrentVersionName
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlign true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

def Properties props = new Properties()
def propFile = file('signing.properties')

if (propFile.canRead()) {

    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE')
            && props.containsKey('STORE_PASSWORD')
            && props.containsKey('KEY_ALIAS')
            && props.containsKey('KEY_PASSWORD')) {
        println 'RELEASE BUILD SIGNING'
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'RELEASE BUILD NOT FOUND. SIGNING PROPERTIES'
        android.buildTypes.release.signingConfig = null
    }

} else {
    println 'RELEASE BUILD NOT FOUND SIGNING FILE'
    android.buildTypes.release.signingConfig = null
}

android.applicationVariants.all { variant ->
    String currentDate = new Date().format("yyyyMMdd'_'HH.mm")
    if (variant.zipAlign) {
        def oldFile = variant.outputFile
        def newFile = oldFile.name.replace('.apk', '_' + ourCurrentVersionName + "_" + currentDate + '.apk')
        println 'Building '+ newFile

        variant.outputFile = new File(oldFile.parent, newFile)
    }

    def oldFile = variant.packageApplication.outputFile
    def newFile = oldFile.name.replace('.apk', '_' + ourCurrentVersionName + "_" + currentDate + '.apk')
    println 'Building '+ newFile

    variant.packageApplication.outputFile = new File(oldFile.parent, newFile)
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}
